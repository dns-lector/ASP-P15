@using System.Security.Claims
@model ASP_P15.Models.Shop.ShopProductPageModel
@{
    bool isAuthenticated = Context.User.Identity?.IsAuthenticated ?? false;
    String? userId = Context.User.Claims
        .FirstOrDefault(c => c.Type == ClaimTypes.Sid)
        ?.Value;
}

<div class="row">
    <div class="col col-6">
        <img class="product-picture" src="/Home/Download/Shop_@(Model.Product.Image)" alt="Picture" />
    </div>
    <div class="col col-6">
        <h1>@Model.Product.Name</h1>
        <p>@Model.Product.Description</p>
        <h2>₴ @Model.Product.Price.ToString("F2")</h2>
        <button 
            class="btn btn-outline-success"
            data-product-id="@Model.Product.Id"
            data-user-id="@userId"
            data-role="add-to-cart"
        ><i class="bi bi-cart3"></i> До кошику</button>
    
        <div class="row">
            <b>Відгуки про товар:</b>
            @if(Model.Product.Feedbacks.Count() == 0)
            {
                <p>Відгуків поки що немає</p>
            }
            else foreach(var feedback in Model.Product.Feedbacks)
            {
                    bool isMine = isAuthenticated && feedback.User?.Id.ToString() == userId;
                    String myClass = isMine
                    ? "my-product-feedback"
                    : String.Empty;

                <div class="product-feedback @myClass">
                    <i>@DateTime.FromBinary(638610555513750564).ToShortDateString()</i>
                    <b>@(feedback.User?.Name ?? "Анонімно"):</b>
                    <p 
                        data-feedback-id="@feedback.Id"
                        data-role="feedback-text"
                    >@(feedback.Text)</p>

                    <div class="d-flex justify-content-between">
                        <div 
                            data-feedback-id="@feedback.Id" 
                            data-role="feedback-rate"
                            data-value="@feedback.Rate">
                            @for(int i = 0; i < feedback.Rate; ++i)
                            {
                                @* <span>✭</span> *@
                                <span class="bi bi-star-fill"></span>
                            }
                        </div>
                            @if (isMine)
                            {
                                <div>
                                    <button
                                        class="btn btn-outline-warning"
                                        data-feedback-id="@feedback.Id"
                                        data-role="feedback-edit"
                                    ><i class="bi bi-pencil-square"></i></button>
                                    <button 
                                        class="btn btn-outline-danger"
                                        data-feedback-id="@feedback.Id"
                                        data-role="feedback-delete"
                                    ><i class="bi bi-x-square"></i></button>
                                </div>
                            }
                        </div>
                </div>
            }
        </div>
        @if(isAuthenticated)
        {
            <div class="row">
                <b id="product-feedback-title">Додати відгук:</b><br />
                <input type="number" id="product-feedback-rate"
                    value="5" min="1" max="5" />
                <br/>
                <textarea 
                    id="product-feedback"
                    data-user-id="@userId"
                    data-product-id="@(Model.Product.Id)"
                ></textarea><br />
                <button id="product-feedback-button" class="btn btn-outline-info">Надіслати</button>
            </div>
        }
        
    </div>
</div>

<h2>Вас також може зацікавити</h2>
<div class="row">
    @foreach (var product in @Model
        .ProductGroup
        .Products
        .Where(p => p != Model.Product)
        .Take(5))
    {
        <div class="col col-2">
            <a asp-action="Product" asp-route-id="@(product.Slug ?? product.Id.ToString())">
                <img class="product-picture" src="/Home/Download/Shop_@(product.Image)" alt="Picture" />
                <p>@product.Name</p>
            </a>
        </div>
    }
</div>

@*
    Т.З. 
    - обмежити висоту блока коментарів, за умови, що
       контент не вміщується, реалізувати прокрутку
    - залишити блок "додати відгук" завжди видимим
       (при прокрутці) - вилучити з блока, що прокручується
    - реалізувати у відгуках відображення завжди 5 зірочок:
       суцільних - згідно з рейтингом,
       решта - "порожні"
    - додати загальний рейтинг за відгуками (середнє значення)
       вивести його на картці товару (в районі ціни)
    - також виводити загальний рейтинг (та кількість 
       відгуків) на сторінці групи товарів 

    - додати до карток груп товарів загальну кількість
       товарів у даній групі (або у постійному складі, 
       або у підказці при наведенні)

    * реалізувати можливість редагування та видалення своїх коментарів

Д.З. 
- Реалізувати роботу кнопки скасування редагування відгуку
- У бекенді (ShopController) реалізувати перевірки на надходження 
потрібних даних. Оскільки у FeedbackFormModel всі ID є опціональними,
кожен метод АРІ має забезпечити перевірку потрібних для себе параметрів
POST: UserId, ProductId
PUT: EditId
У разі їх відсутності повертати RestResponse із відповідним текстом
на кшталт "Відсутній необхідний параметр 'UserId'"
*@    